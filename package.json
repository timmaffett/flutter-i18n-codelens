{
    "name": "flutter-i18n-codelens",
    "displayName": "i18n CodeLens",
    "description": "Advanced i18n CodeLens with bulk translation editing, interactive hover actions, and comprehensive language resource management for Flutter/Dart projects.",
    "version": "1.1.1",
    "publisher": "HiveRight",
    "author": {
        "email": "timmaffett@gmail.com",
        "name": "Tim Maffett"
    },
    "private": true,
    "icon": "images/logo.png",
    "engines": {
        "vscode": "^1.26.0"
    },
    "categories": [
        "Other"
    ],
    "repository": {
        "type": "git",
        "url": "https://github.com/timmaffett/flutter-flutter-i18n-codelens"
    },
    "activationEvents": [
        "onLanguage:dart",
        "onLanguage:typescript",
        "onLanguage:typescriptreact",
        "onLanguage:javascript",
        "onLanguage:javascriptreact",
        "onLanguage:json"
    ],
    "main": "./out/extension",
    "contributes": {
        "views": {
            "explorer": [
                {
                    "id": "i18nResourceDefinitions",
                    "name": "i18n Resource Definitions",
                    "when": "config.flutter-i18n-codelens.resourceTreeViewVisible && resourceLangId in i18TreeView.supportedLanguages"
                }
            ]
        },
        "commands": [
            {
                "title": "Enable CodeLens",
                "command": "flutter-i18n-codelens.enableCodeLensAction",
                "category": "i18n CodeLens"
            },
            {
                "title": "Disable Codelens",
                "command": "flutter-i18n-codelens.disableCodeLensAction",
                "category": "i18n CodeLens"
            },
            {
                "title": "Reset cache and reload",
                "command": "flutter-i18n-codelens.resetAndReloadExtensionAction",
                "category": "i18n CodeLens"
            }
        ],
        "configuration": {
            "properties": {
                "flutter-i18n-codelens.codeLens": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable or disable the CodeLens for missing resource code."
                },
                "flutter-i18n-codelens.resourceAutoSave": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable auto save for resource file(s) that saves files after inserted or updated resource data."
                },
                "flutter-i18n-codelens.underlineCodeDecorator": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable or disable the underline decorator for missing resource code(s)."
                },
                "flutter-i18n-codelens.autoFocusAfterModified": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable auto focus document after inserted or updated target resource file(s)."
                },
                "flutter-i18n-codelens.revealResourceInTreeView": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable or disable the automatic reveal resource item in the Resource Tree View when selected resource file on the editor."
                },
                "flutter-i18n-codelens.resourceTreeViewVisible": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable or disable the Resource Tree View"
                },
                "flutter-i18n-codelens.resourceFilesGlobPattern": {
                    "type": "string",
                    "description": "Where to find the language JSON files. Language file glob patterns. (Language resource files must be key value object files.)",
                    "editPresentation": "singlelineText",
                    "default": "**/locales/**/*.json"
                },
                "flutter-i18n-codelens.resourceFilesGlobPattern": {
                    "type": "string",
                    "description": "Where to find the language JSON files. Language file glob patterns. (Language resource files must be key value object files.)",
                    "editPresentation": "singlelineText",
                    "default": "**/locales/**/*.json"
                },
                "flutter-i18n-codelens.codeFileRegex": {
                    "type": "string",
                    "description": "Regular expression pattern to identify code files for scanning. The default pattern matches: .dart,.jsx,.tsx.",
                    "editPresentation": "singlelineText",
                    "default": "\\.(dart?|jsx?|tsx?)$"
                },
                "flutter-i18n-codelens.resourceCodeDetectionRegex": {
                    "type": "[string]",
                    "description": "Regular expression pattern to identify resource keys for hover information and CodeLenses. The default pattern matches: t('key'), T('key'), or keys preceded by /** @i18n */ comment.",
                    "SeditPresentation": "singlelineText",
                    "default": [
                        "\\b[Tt][Rr]\\s*\\(\\s*[\"'](?<key>[À-ÖØ-öø-ÿA-Za-z0-9{}!\\\\#$%^&*()\\-_=+;:/?.>,<`~ .-]+?)[\"']",
                        "(?<=[\"'])(?<key>[À-ÖØ-öø-ÿA-Za-z0-9{}!\\\\#$%^&*()\\-_=+;:/?.>,<`~ .-]+?)(?=[\"']\\.i18n)",
                        "(?<=[\"'])(?<key>[À-ÖØ-öø-ÿA-Za-z0-9{}!\\\\#$%^&*()\\-_=+;:/?.>,<`~ .-]+?)(?=[\"']\\.tr)"
                    ]
                },
                "flutter-i18n-codelens.logLevel": {
                    "type": "string",
                    "enum": [
                        "debug",
                        "info",
                        "warn",
                        "error",
                        "off"
                    ],
                    "default": "warn",
                    "description": "Controls the log level of the i18n CodeLens extension. Set to 'debug' for more verbose logs."
                }
            }
        }
    },
    "scripts": {
        "package": "vsce package",
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "lint": "eslint . --ext .ts,.tsx",
        "watch": "tsc -watch -p ./"
    },
    "devDependencies": {
        "@types/lodash": "^4.14.180",
        "@types/minimatch": "^3.0.5",
        "@types/node": "^12.12.0",
        "@types/vscode": "^1.26.0",
        "@typescript-eslint/eslint-plugin": "^4.16.0",
        "@typescript-eslint/parser": "^4.16.0",
        "eslint": "^7.21.0",
        "typescript": "^4.9.5",
        "vsce": "^2.5.1"
    },
    "dependencies": {
        "fastest-levenshtein": "^1.0.16",
        "ignore": "^7.0.5",
        "lodash": "^4.17.21",
        "minimatch": "^5.0.1"
    }
}
